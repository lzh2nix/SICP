(define (make-moniotred proc)
  (let ((count 0))
    (lambda (m)
      (cond ((eq? m 'reset-count)
             (begin (set! count 0) count))
            ((number? m)
             (begin (set! count (+ count 1)) (proc m)))
            ((eq? m 'how-may-calls?)
             count)))))

;test
(define s (make-moniotred sqrt))
(s 10)
(s 20)
(s 30)
(s 'how-may-calls?)
(s 'reset-count)
(s 'how-may-calls?)
(s 10)
(s 20)
(s 'how-may-calls?)
